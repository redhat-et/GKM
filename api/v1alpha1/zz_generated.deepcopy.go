//go:build !ignore_autogenerated

/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheStatus) DeepCopyInto(out *CacheStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.LastUpdated.DeepCopyInto(&out.LastUpdated)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheStatus.
func (in *CacheStatus) DeepCopy() *CacheStatus {
	if in == nil {
		return nil
	}
	out := new(CacheStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGKMCache) DeepCopyInto(out *ClusterGKMCache) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGKMCache.
func (in *ClusterGKMCache) DeepCopy() *ClusterGKMCache {
	if in == nil {
		return nil
	}
	out := new(ClusterGKMCache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterGKMCache) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGKMCacheList) DeepCopyInto(out *ClusterGKMCacheList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterGKMCache, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGKMCacheList.
func (in *ClusterGKMCacheList) DeepCopy() *ClusterGKMCacheList {
	if in == nil {
		return nil
	}
	out := new(ClusterGKMCacheList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterGKMCacheList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGKMCacheNode) DeepCopyInto(out *ClusterGKMCacheNode) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGKMCacheNode.
func (in *ClusterGKMCacheNode) DeepCopy() *ClusterGKMCacheNode {
	if in == nil {
		return nil
	}
	out := new(ClusterGKMCacheNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterGKMCacheNode) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGKMCacheNodeList) DeepCopyInto(out *ClusterGKMCacheNodeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterGKMCacheNode, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGKMCacheNodeList.
func (in *ClusterGKMCacheNodeList) DeepCopy() *ClusterGKMCacheNodeList {
	if in == nil {
		return nil
	}
	out := new(ClusterGKMCacheNodeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterGKMCacheNodeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGKMCacheNodeSpec) DeepCopyInto(out *ClusterGKMCacheNodeSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGKMCacheNodeSpec.
func (in *ClusterGKMCacheNodeSpec) DeepCopy() *ClusterGKMCacheNodeSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterGKMCacheNodeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGKMCacheNodeStatus) DeepCopyInto(out *ClusterGKMCacheNodeStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGKMCacheNodeStatus.
func (in *ClusterGKMCacheNodeStatus) DeepCopy() *ClusterGKMCacheNodeStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterGKMCacheNodeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGKMCacheSpec) DeepCopyInto(out *ClusterGKMCacheSpec) {
	*out = *in
	in.KernelProperties.DeepCopyInto(&out.KernelProperties)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGKMCacheSpec.
func (in *ClusterGKMCacheSpec) DeepCopy() *ClusterGKMCacheSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterGKMCacheSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGKMCacheStatus) DeepCopyInto(out *ClusterGKMCacheStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.LastSynced.DeepCopyInto(&out.LastSynced)
	if in.Summary != nil {
		in, out := &in.Summary, &out.Summary
		*out = make([]KernelSummary, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGKMCacheStatus.
func (in *ClusterGKMCacheStatus) DeepCopy() *ClusterGKMCacheStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterGKMCacheStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GKMCache) DeepCopyInto(out *GKMCache) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GKMCache.
func (in *GKMCache) DeepCopy() *GKMCache {
	if in == nil {
		return nil
	}
	out := new(GKMCache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GKMCache) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GKMCacheList) DeepCopyInto(out *GKMCacheList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GKMCache, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GKMCacheList.
func (in *GKMCacheList) DeepCopy() *GKMCacheList {
	if in == nil {
		return nil
	}
	out := new(GKMCacheList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GKMCacheList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GKMCacheNode) DeepCopyInto(out *GKMCacheNode) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GKMCacheNode.
func (in *GKMCacheNode) DeepCopy() *GKMCacheNode {
	if in == nil {
		return nil
	}
	out := new(GKMCacheNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GKMCacheNode) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GKMCacheNodeList) DeepCopyInto(out *GKMCacheNodeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GKMCacheNode, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GKMCacheNodeList.
func (in *GKMCacheNodeList) DeepCopy() *GKMCacheNodeList {
	if in == nil {
		return nil
	}
	out := new(GKMCacheNodeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GKMCacheNodeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GKMCacheNodeSpec) DeepCopyInto(out *GKMCacheNodeSpec) {
	*out = *in
	if in.CacheStatuses != nil {
		in, out := &in.CacheStatuses, &out.CacheStatuses
		*out = make([]CacheStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GKMCacheNodeSpec.
func (in *GKMCacheNodeSpec) DeepCopy() *GKMCacheNodeSpec {
	if in == nil {
		return nil
	}
	out := new(GKMCacheNodeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GKMCacheNodeStatus) DeepCopyInto(out *GKMCacheNodeStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GKMCacheNodeStatus.
func (in *GKMCacheNodeStatus) DeepCopy() *GKMCacheNodeStatus {
	if in == nil {
		return nil
	}
	out := new(GKMCacheNodeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GKMCacheSpec) DeepCopyInto(out *GKMCacheSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GKMCacheSpec.
func (in *GKMCacheSpec) DeepCopy() *GKMCacheSpec {
	if in == nil {
		return nil
	}
	out := new(GKMCacheSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GKMCacheStatus) DeepCopyInto(out *GKMCacheStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.LastSynced.DeepCopyInto(&out.LastSynced)
	if in.Summary != nil {
		in, out := &in.Summary, &out.Summary
		*out = make([]KernelSummary, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GKMCacheStatus.
func (in *GKMCacheStatus) DeepCopy() *GKMCacheStatus {
	if in == nil {
		return nil
	}
	out := new(GKMCacheStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KernelProperties) DeepCopyInto(out *KernelProperties) {
	*out = *in
	if in.Summary != nil {
		in, out := &in.Summary, &out.Summary
		*out = make([]KernelSummary, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KernelProperties.
func (in *KernelProperties) DeepCopy() *KernelProperties {
	if in == nil {
		return nil
	}
	out := new(KernelProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KernelSummary) DeepCopyInto(out *KernelSummary) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KernelSummary.
func (in *KernelSummary) DeepCopy() *KernelSummary {
	if in == nil {
		return nil
	}
	out := new(KernelSummary)
	in.DeepCopyInto(out)
	return out
}
