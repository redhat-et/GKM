# Build the agent binary
FROM public.ecr.aws/docker/library/golang:1.24.4 AS builder

WORKDIR /workspace

# Install required system packages
RUN apt-get update && \
    apt-get install -y \
        libgpgme-dev \
        btrfs-progs \
        libbtrfs-dev \
        libgpgme11-dev \
        libseccomp-dev \
        pkg-config \
        build-essential && \
    apt-get clean

# Copy the Go Modules manifests
COPY go.mod go.mod
COPY go.sum go.sum

# Copy the go source
COPY agent/main.go agent/main.go
COPY api/ api/
COPY pkg/ pkg/
COPY internal/controller/ internal/controller/
COPY vendor/ vendor/
COPY Makefile Makefile

# Build the agent binary
RUN make build-gkm-agent

# Use a minimal Ubuntu base image that supports CGO binaries
FROM public.ecr.aws/docker/library/ubuntu:22.04

# Copy the binary from the builder
COPY --from=builder /workspace/bin/gkm-agent /agent

# Install required runtime libraries for CGO
RUN apt-get update && \
    apt-get install -y \
        ca-certificates \
        libgpgme11 \
        libbtrfs0 \
        libffi8 \
        libc6 \
        wget \
        pciutils \
        hwdata \
        gnupg2 \
        python3-setuptools \
        python3-wheel \
        curl \
        dialog \
        rsync \
        lsb-release \
        software-properties-common \
        libseccomp2 && \
    apt-get clean

ARG ROCM_VERSION=6.4.2.1
ARG AMDGPU_VERSION=6.4.60402
ARG OPT_ROCM_VERSION=6.4.2
# Install ROCm apt repo
RUN wget https://repo.radeon.com/amdgpu-install/${ROCM_VERSION}/ubuntu/jammy/amdgpu-install_${AMDGPU_VERSION}-1_all.deb
RUN apt install -y ./*.deb
RUN apt update &&  DEBIAN_FRONTEND=noninteractive apt install -y amd-smi-lib rocm-smi-lib
RUN apt-get clean && rm -rf /var/lib/apt/lists/*
RUN ln -s /opt/rocm-${OPT_ROCM_VERSION}/bin/amd-smi /usr/bin/amd-smi
RUN ln -s /opt/rocm-${OPT_ROCM_VERSION}/bin/rocm-smi /usr/bin/rocm-smi

# Run as non-root user
USER 65532:65532

ENTRYPOINT ["/agent"]
